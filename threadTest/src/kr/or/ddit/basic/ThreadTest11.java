package kr.or.ddit.basic;

// yield() 메서드 연습

public class ThreadTest11 {

	public static void main(String[] args) {
		YieldThread th1 = new YieldThread("1번 스레드");
		YieldThread th2 = new YieldThread("2번 스레드");
		
		th1.start();
		th2.start();
		
		try {
			Thread.sleep(10);
		} catch (InterruptedException e) {
			
		}
		
		System.out.println("-------------------1번영역");
		th1.work = false;
		
		try {
			Thread.sleep(10);
		} catch (InterruptedException e) {
			
		}
		System.out.println("-------------------2번영역");
		
		th1.work = true;
		
		try {
			Thread.sleep(10);
		} catch (InterruptedException e) {
			
		}
		System.out.println("-------------------3번영역");
		th1.stop = true;
		th2.stop = true;
		
	}

}

// yield() 메서드 연습용 스레드
class YieldThread extends Thread{
	public boolean stop = false;
	public boolean work = true;
	
	public YieldThread(String name){
		super(name); // 스레드의 이름 설정하기. super 부모 스레드의 생성자 : Thread객체. Thread객체에는 name이라는 속성이있음. 스레드이름이 저장됨
	}
	
	@Override
	public void run() {
		while(!stop){ // stop값이 true이면 반복문 탈출
			if(work){
				// getName()메서드: 스레드 이름(name속성값) 반환
				System.out.println(getName()+"작업중...");
			}else{
				System.out.println(getName()+ "양보...");
				Thread.yield();
			}
			
		}
	}
}
